---
description: Generator documentation, usage, and development guidelines for init, terraform-backend, preset, and terraform-module generators
globs:
  - "**/generators/**"
  - "**/generators.json"
alwaysApply: false
---

# Generators

The plugin provides four generators:

## Generator List

1. **`init` Generator** - `packages/nx-terraform/src/generators/init/`
   - Adds the `nx-terraform` plugin to `nx.json`
   - Run via: `nx g @nx-terraform/plugin:init`
   - Documentation: `packages/nx-terraform/src/generators/init/README.md`

2. **`terraform-backend` Generator** - `packages/nx-terraform/src/generators/terraform-backend/`
   - Creates a new Terraform backend project
   - Supports backend types: `aws-s3` or `local`
   - Run via: `nx g @nx-terraform/plugin:terraform-backend`
   - Documentation: `packages/nx-terraform/src/generators/terraform-backend/README.md`

3. **`preset` Generator** - `packages/nx-terraform/src/generators/preset/`
   - Initializes workspace with Terraform setup
   - Runs `init` generator and scaffolds initial backend project
   - Used when creating a new workspace: `npx create-nx-terraform-app`
   - Documentation: `packages/nx-terraform/src/generators/preset/README.md`

4. **`terraform-module` Generator** - `packages/nx-terraform/src/generators/terraform-module/`
   - Creates Terraform modules (simple library or stateful application)
   - Supports backend integration for stateful modules
   - Run via: `nx g @nx-terraform/plugin:terraform-module`
   - Documentation: `packages/nx-terraform/src/generators/terraform-module/README.md`

## Generator Development Rules

When adding or modifying generators:

1. Always read the generator's README.md first for implementation details
2. Create generator directory in `packages/nx-terraform/src/generators/<generator-name>/`
3. Create `schema.json` with JSON Schema (Draft 07)
4. Implement generator function with both default export and named export
5. Add to `generators.json`
6. Write tests (`*.spec.ts`) using Nx's testing utilities
7. Use `Tree` API for all file operations (don't use fs directly)
8. Always call `formatFiles()` after generating files
9. Template files with EJS should use `__tmpl__` suffix to avoid lint errors
10. Update generator README.md with any significant changes

## Generator Template System

- Uses `generateFiles` from `@nx/devkit`
- Template directories: `files/` subdirectory in each generator
- EJS templates with variable substitution: `<%= variable %>`
- Template files use `__tmpl__` suffix (stripped via `tmpl: ''` substitution)
- `__ignoreFile__` template generates `.gitignore` (via `ignoreFile: '.gitignore'` substitution)
